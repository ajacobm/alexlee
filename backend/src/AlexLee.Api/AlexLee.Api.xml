<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AlexLee.Api</name>
    </assembly>
    <members>
        <member name="T:AlexLee.Api.Controllers.AlgorithmsController">
            <summary>
            API Controller for demonstrating C# algorithm implementations
            Problems 1-3 from the Alex Lee Developer Exercise with enhanced file search
            </summary>
        </member>
        <member name="M:AlexLee.Api.Controllers.AlgorithmsController.InterleaveStrings(AlexLee.Api.Controllers.StringInterleaveRequest)">
            <summary>
            Problem 1: String Interleaving
            Interleave two strings character by character
            Example: "abc" + "123" = "a1b2c3"
            </summary>
            <param name="request">String interleave parameters</param>
            <returns>Interleaved string result</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.AlgorithmsController.CheckPalindrome(AlexLee.Api.Controllers.PalindromeCheckRequest)">
            <summary>
            Problem 2: Palindrome Check
            Check if a string is a palindrome (ignoring case, spaces, and punctuation)
            </summary>
            <param name="request">Palindrome check parameters</param>
            <returns>Palindrome check result</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.AlgorithmsController.SearchFiles(AlexLee.Api.Controllers.FileSearchRequest)">
            <summary>
            Problem 3: Parallel File Search (Enhanced for cross-platform support)
            Search for text across all files in a directory with Windows/Docker support
            </summary>
            <param name="request">File search parameters</param>
            <returns>Search results including file count and occurrences</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.AlgorithmsController.GetAvailableSearchPaths">
            <summary>
            Get available file search paths for cross-platform environments
            </summary>
            <returns>List of available search paths</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.AlgorithmsController.GetAlgorithmInfo">
            <summary>
            Get algorithm demonstration information
            </summary>
            <returns>Information about available algorithms</returns>
        </member>
        <member name="T:AlexLee.Api.Controllers.PurchaseDetailsController">
            <summary>
            API Controller for managing Purchase Detail items
            Implements full CRUD operations and SQL Server stored procedures for Alex Lee Exercise
            </summary>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.GetPurchaseDetails(System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all purchase detail items with optional filtering
            </summary>
            <param name="purchaseOrderNumber">Filter by purchase order number</param>
            <param name="itemNumber">Filter by item number</param>
            <param name="itemName">Filter by item name</param>
            <param name="itemDescription">Filter by item description</param>
            <returns>Collection of purchase detail items</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.GetPurchaseDetailsWithLineNumbers">
            <summary>
            SQL Exercise Question #6: Get purchase detail records with line numbers using stored procedure
            Implements line numbering per item per purchase order from Question #4
            </summary>
            <returns>Purchase detail items with computed line numbers</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.GetDuplicatePurchaseDetails">
            <summary>
            SQL Exercise Question #5: Get duplicate purchase detail records using stored procedure
            Identifies records with same purchase order number, item number, price, and quantity
            </summary>
            <returns>Duplicate purchase detail groups</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.GetPurchaseDetail(System.Int64)">
            <summary>
            Get a specific purchase detail item by ID
            </summary>
            <param name="id">Purchase detail item auto ID</param>
            <returns>Purchase detail item if found</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.CreatePurchaseDetail(AlexLee.Application.Commands.CreatePurchaseDetailCommand)">
            <summary>
            Create a new purchase detail item
            </summary>
            <param name="command">Purchase detail creation data</param>
            <returns>Created purchase detail item</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.UpdatePurchaseDetail(System.Int64,AlexLee.Application.Commands.UpdatePurchaseDetailCommand)">
            <summary>
            Update an existing purchase detail item
            </summary>
            <param name="id">Purchase detail item auto ID</param>
            <param name="command">Updated purchase detail data</param>
            <returns>Updated purchase detail item</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.DeletePurchaseDetail(System.Int64)">
            <summary>
            Delete a purchase detail item
            </summary>
            <param name="id">Purchase detail item auto ID</param>
            <returns>Success status</returns>
        </member>
        <member name="M:AlexLee.Api.Controllers.PurchaseDetailsController.GetPurchaseDetailSummary">
            <summary>
            Get summary information about the purchase detail data
            </summary>
            <returns>Summary statistics</returns>
        </member>
        <member name="T:AlexLee.Api.Controllers.PurchaseDetailSummaryResponse">
            <summary>
            Response model for purchase detail summary
            </summary>
        </member>
    </members>
</doc>
