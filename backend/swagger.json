{
  "openapi": "3.0.1",
  "info": {
    "title": "Alex Lee Developer Exercise API",
    "description": "REST API for Purchase Detail Management System with SQL Server Express and OpenTelemetry",
    "contact": {
      "name": "Alex Lee Developer Exercise",
      "email": "developer@alexlee.com"
    },
    "version": "v1.0"
  },
  "paths": {
    "/api/Algorithms/string-interleave": {
      "post": {
        "tags": [
          "Algorithms"
        ],
        "summary": "Problem 1: String Interleaving\r\nInterleave two strings character by character\r\nExample: \"abc\" + \"123\" = \"a1b2c3\"",
        "requestBody": {
          "description": "String interleave parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringInterleaveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StringInterleaveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StringInterleaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringInterleaveResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Algorithms/palindrome-check": {
      "post": {
        "tags": [
          "Algorithms"
        ],
        "summary": "Problem 2: Palindrome Check\r\nCheck if a string is a palindrome (ignoring case, spaces, and punctuation)",
        "requestBody": {
          "description": "Palindrome check parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PalindromeCheckRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PalindromeCheckRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PalindromeCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PalindromeCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Algorithms/file-search": {
      "post": {
        "tags": [
          "Algorithms"
        ],
        "summary": "Problem 3: Parallel File Search (Enhanced for cross-platform support)\r\nSearch for text across all files in a directory with Windows/Docker support",
        "requestBody": {
          "description": "File search parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FileSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FileSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Algorithms/file-search/available-paths": {
      "get": {
        "tags": [
          "Algorithms"
        ],
        "summary": "Get available file search paths for cross-platform environments",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailablePathsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Algorithms/info": {
      "get": {
        "tags": [
          "Algorithms"
        ],
        "summary": "Get algorithm demonstration information",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlgorithmInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PurchaseDetails": {
      "get": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "Get all purchase detail items with optional filtering",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "query",
            "description": "Filter by purchase order number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemNumber",
            "in": "query",
            "description": "Filter by item number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemName",
            "in": "query",
            "description": "Filter by item name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemDescription",
            "in": "query",
            "description": "Filter by item description",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseDetailItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "Create a new purchase detail item",
        "requestBody": {
          "description": "Purchase detail creation data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseDetailCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseDetailCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseDetailCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseDetailItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PurchaseDetails/with-line-numbers": {
      "get": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "SQL Exercise Question #6: Get purchase detail records with line numbers using stored procedure\r\nImplements line numbering per item per purchase order from Question #4",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseDetailItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PurchaseDetails/duplicates": {
      "get": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "SQL Exercise Question #5: Get duplicate purchase detail records using stored procedure\r\nIdentifies records with same purchase order number, item number, price, and quantity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DuplicatePurchaseDetailGroup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PurchaseDetails/{id}": {
      "get": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "Get a specific purchase detail item by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Purchase detail item auto ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseDetailItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "Update an existing purchase detail item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Purchase detail item auto ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated purchase detail data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseDetailCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseDetailCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseDetailCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseDetailItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "Delete a purchase detail item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Purchase detail item auto ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PurchaseDetails/summary": {
      "get": {
        "tags": [
          "PurchaseDetails"
        ],
        "summary": "Get summary information about the purchase detail data",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseDetailSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Telemetry/metrics": {
      "get": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Get current application metrics in Prometheus format",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Telemetry/logs/stream": {
      "get": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Stream logs in real-time using Server-Sent Events (SSE)",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Minimum log level to stream (default: Warning)",
            "schema": {
              "type": "string",
              "default": "Warning"
            }
          },
          {
            "name": "maxLines",
            "in": "query",
            "description": "Maximum number of lines to initially send (default: 50)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Telemetry/logs": {
      "get": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Get paginated historical logs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size (default: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Filter by log level",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Filter logs from this date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Filter logs to this date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Telemetry/stats": {
      "get": {
        "tags": [
          "Telemetry"
        ],
        "summary": "Get log statistics summary",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlgorithmInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "example": {
            "type": "string",
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlgorithmInfoResponse": {
        "type": "object",
        "properties": {
          "algorithms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlgorithmInfo"
            },
            "nullable": true
          },
          "totalAlgorithms": {
            "type": "integer",
            "format": "int32"
          },
          "author": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AvailablePathsResponse": {
        "type": "object",
        "properties": {
          "availablePaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "defaultPath": {
            "type": "string",
            "nullable": true
          },
          "isDockerContainer": {
            "type": "boolean"
          },
          "recommendedPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePurchaseDetailCommand": {
        "type": "object",
        "properties": {
          "purchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "itemNumber": {
            "type": "integer",
            "format": "int32"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double"
          },
          "purchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "lastModifiedByUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DuplicatePurchaseDetailGroup": {
        "type": "object",
        "properties": {
          "purchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "itemNumber": {
            "type": "integer",
            "format": "int32"
          },
          "purchasePrice": {
            "type": "number",
            "format": "double"
          },
          "purchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseDetailItemAutoIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileSearchRequest": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "directoryPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileSearchResponse": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "directoryPath": {
            "type": "string",
            "nullable": true
          },
          "fileCount": {
            "type": "integer",
            "format": "int32"
          },
          "lineCount": {
            "type": "integer",
            "format": "int32"
          },
          "occurrenceCount": {
            "type": "integer",
            "format": "int32"
          },
          "outputFile": {
            "type": "string",
            "nullable": true
          },
          "searchCompleted": {
            "type": "boolean"
          },
          "processingTimeMs": {
            "type": "integer",
            "format": "int32"
          },
          "filesSearched": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PalindromeCheckRequest": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PalindromeCheckResponse": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "isPalindrome": {
            "type": "boolean"
          },
          "processedInput": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PurchaseDetailItem": {
        "type": "object",
        "properties": {
          "purchaseDetailItemAutoId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "itemNumber": {
            "type": "integer",
            "format": "int32"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double"
          },
          "purchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "lastModifiedByUser": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseDetailSummaryResponse": {
        "type": "object",
        "properties": {
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "duplicateRecords": {
            "type": "integer",
            "format": "int32"
          },
          "uniquePurchaseOrders": {
            "type": "integer",
            "format": "int32"
          },
          "uniqueItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          },
          "storedProceduresAvailable": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "databaseType": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for purchase detail summary"
      },
      "StringInterleaveRequest": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "nullable": true
          },
          "second": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringInterleaveResponse": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "nullable": true
          },
          "second": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdatePurchaseDetailCommand": {
        "type": "object",
        "properties": {
          "purchaseDetailItemAutoId": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "itemNumber": {
            "type": "integer",
            "format": "int32"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double"
          },
          "purchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "lastModifiedByUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}