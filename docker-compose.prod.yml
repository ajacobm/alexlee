services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: alexlee-sqlserver-prod
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd123!
      - MSSQL_PID=Express
    expose:
      - "1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - alexlee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'P@ssw0rd123!' -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: alexlee-backend-prod
    expose:
      - "5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=AlexLeeDB;User Id=SA;Password=P@ssw0rd123!;TrustServerCertificate=true
      - ASPNETCORE_URLS=http://+:5000
      - FileSearchPath=/app/search-files
    volumes:
      - backend-data:/app/data
      - /mnt/c/Users/meyer/Desktop:/app/search-files/windows:ro  # Windows user files (read-only)
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - alexlee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: alexlee-frontend-prod
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - alexlee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  backend-data:
    driver: local
  sqlserver-data:
    driver: local

networks:
  alexlee-network:
    driver: bridge